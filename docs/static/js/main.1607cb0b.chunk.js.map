{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","onChange","target","value","type","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","imageUrl","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAiBlD,OACE,sBAAMC,SAVa,SAAEC,GACrBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OAC1CN,EAAc,MAKhB,SACE,uBACEO,SAhBmB,SAAEL,GACzBF,EAAeE,EAAEM,OAAOC,QAgBpBC,KAAK,OACLD,MAAQV,O,+BCvBHY,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,+DAEFI,MAAOF,GAFL,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAM,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,SAAQ,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QATtB,kBAYdM,GAZc,4CAAH,sDCAPQ,EAAc,SAAC,GAA8B,EAA3BL,GAA4B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,SAGxC,OACE,sBAAKI,UAAU,6CAAf,UACE,qBACEC,IAAMN,EACNO,IAAMN,IAGND,EAAMpB,OAAOC,OAAS,GAAK,4BAAI,qBAA2B,4BAAKmB,QCR1DQ,EAAU,SAAC,GAAoB,IAAjBpB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAwB1C,OAjBAC,qBAAW,WAETzB,EAASC,GACNyB,MAAM,SAAAC,GAELC,YAAW,WACTC,QAAQC,IAAKH,GACbH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,MAEV,WAIN,CAAErB,IAEEsB,EDrB0BQ,CAAc9B,GAAlCc,EAF4B,EAEjCP,KAAac,EAFoB,EAEpBA,QAIrB,OAFAO,QAAQC,IAAIR,GAGV,qCACE,qBAAIJ,UAAU,wCAAd,cAAyDjB,EAAzD,OAEEqB,GAAW,oBAAGJ,UAAU,+CAAb,qCAAsFjB,EAASR,UAE5G,qBAAKyB,UAAU,YAAf,SACMH,EAAOL,KAAK,SAACC,GAAD,OACX,cAAC,EAAD,aAEGA,IAAMA,GACDA,GAFCA,EAAIC,aEfboB,EAAe,WAAO,IAAD,EAEI7C,mBAAS,CAAE,mBAFf,mBAEzB8C,EAFyB,KAEb/C,EAFa,KAIhC,OACE,qCACE,gDACA,cAAC,EAAD,CAAcA,cAAgBA,IAC9B,uBAEA,6BAEI+C,EAAWvB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CACEA,SAAWA,GACLA,Y,MCbpBiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1607cb0b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( { setCategories } ) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputValue = ( e ) => {\n    setInputValue( e.target.value )\n  };\n\n  const handleSubmit = ( e ) => {\n    e.preventDefault();\n\n    if ( inputValue.trim().length > 2 ) {\n      setCategories( (cats) => [ inputValue, ...cats ]);\n      setInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={ handleSubmit } >\n      <input \n        onChange={ handleInputValue }\n        type=\"text\" \n        value={ inputValue }\n      /> \n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async( category )  => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=12&api_key=zoPqydGyVGGouAnSzZyy9d6uvYvTHPcf`\n  const resp = await fetch( url );\n  const { data } = await resp.json();\n\n  const gifs = data.map( img => {\n    return{\n      id: img.id,\n      title: img.title,\n      imageUrl: img.images?.downsized_medium.url,\n    }\n  });\n  return gifs;\n};","import React from 'react';\n\nexport const GifGridItem = ( { id, title, imageUrl } ) => {\n  // console.log( id, title, imageUrl)\n\n  return (\n    <div className=\"card animate__animated animate__backInDown\" >\n      <img \n        alt={ title }\n        src={ imageUrl }\n      />\n      {\n        title.trim().length > 40 ? <p>{'Too much text...'}</p>  : <p>{ title }</p>\n      }\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ( { category } ) => {\n\n  const { data:images, loading } = useFetchGifs( category );\n\n  console.log(loading);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__backInDown\"> { category } </h3>\n\n      { loading && <p className=\"loadingText animate__animated animate__flash\">Looking for 12 Gifs of: { category.trim() }</p> }\n\n      <div className=\"card-grid\" >\n          { images.map( (img) => \n             <GifGridItem \n                key={ img.id }\n                img={ img } \n                { ...img }\n              />\n          )}\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect( () => {\n\n    getGifs( category )\n      .then( imgs => {\n\n        setTimeout(() => {    \n          console.log( imgs )\n          setState({\n            data: imgs,\n            loading: false\n          });\n        }, 2100);\n\n      })\n\n  }, [ category ])\n\n  return state; // { data: [], loading: true }\n\n};","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n  const [categories, setCategories] = useState([ 'Rick And Morty' ]);\n\n  return (\n    <>\n      <h3>Gif Expert App</h3> \n      <AddCategory  setCategories={ setCategories } />\n      <hr/> \n\n      <ol>\n        { \n          categories.map( category => \n            <GifGrid  \n              category={ category } \n              key={ category }\n            />\n          ) \n        }\n      </ol>\n\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}